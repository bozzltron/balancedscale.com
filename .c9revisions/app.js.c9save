{"ts":1369417094904,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , https = require('https')\n  , path = require('path')\n  , bouncy = require('bouncy')\n  , hbs = require('express-hbs');\n\nvar app = express();\n\nhbs.express3({\n  extname: \".html\",\n  layout: \"layout\"\n});\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.engine('html', hbs.express3({\n  partialsDir: __dirname + '/views',\n  defaultLayout: __dirname + '/views/layout.html'\n}));\napp.set('view engine', 'html');\napp.use(express.compress());\napp.use(express.favicon());\napp.use(express.logger('dev'));\napp.use(express.bodyParser());\napp.use(express.methodOverride());\napp.use(express.cookieParser('your secret here'));\napp.use(express.session());\napp.enable('trust proxy');\napp.use(app.router);\napp.use(express.static(path.join(__dirname, 'public')));\napp.set('view options', {layout:true});\n\n// development only\nif ('development' == app.get('env')) {\n  app.use(express.errorHandler());\n  app.set('port', 3000);\n\n  // Setup mongo connection\n  var databaseUrl = \"bsm\"; // \"username:password@example.com/mydb\"\n  var collections = [\"users\", \"posts\"]\n  var db = require(\"mongojs\").connect(databaseUrl, collections); \n  app.set('mongo', db);\n}\n\n// Routeage\napp.get('/', routes.index);\napp.get('/login', routes.login);\napp.get('/about', routes.about);\napp.get('/blog/:yearmonth/:post', routes.post);\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});\n\nprocess.on('uncaughtException', function (exception) {\n  console.error(exception);\n});\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1695}]],"length":1695}
{"contributors":[],"silentsave":false,"ts":1369417673423,"patch":[[{"diffs":[[0,");\n "],[-1," app.set('port', 3000);\n"],[0,"\n  /"]],"start1":1062,"start2":1062,"length1":32,"length2":8}]],"length":1671,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369500218709,"patch":[[{"diffs":[[0,"bs')"],[-1,";\n\nvar"],[1,"\n  ,"],[0," app"]],"start1":242,"start2":242,"length1":14,"length2":12},{"diffs":[[0,"xpress()"],[1,"\n  , poet = require('poet')( app )"],[0,";\n\nhbs.e"]],"start1":258,"start2":258,"length1":16,"length2":50},{"diffs":[[0,"t\"\n});\n\n"],[1,"// poet\npoet.set({\n  posts: './posts/',  // Directory of posts\n  postsPerPage: 5,     // Posts per page in pagination\n  metaFormat: 'json',  // meta formatter for posts\n})\n  .createPostRoute('/blog/:post')\n  .createPageRoute()\n  .createTagRoute()\n  .createCategoryRoute()\n  .init(function ( locals ) {\n    // Some callback to run once everything is set up\n    // The core storage is passed in as an argument,\n    // where all the locals/middleware functions\n    //and stores can be altered\n  });\n\n\n"],[0,"// all e"]],"start1":354,"start2":354,"length1":16,"length2":514},{"diffs":[[0,"ler());\n"],[-1," "],[0,""],[1,""],[0,"\n  // Se"]],"start1":1587,"start2":1587,"length1":17,"length2":16},{"diffs":[[0,"about);\n"],[1,"//"],[0,"app.get("]],"start1":1921,"start2":1921,"length1":16,"length2":18}]],"length":2202,"saved":false}
